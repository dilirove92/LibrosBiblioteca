<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAGYktHRAD/AP8A/6C9p5MAAAAJdnBBZwAAACAAAAAgAIf6nJ0AAAAldEVYdGRhdGU6Y3JlYXRl
        ADIwMDktMDktMTNUMTU6MzM6MzkrMDI6MDB8pxBrAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDA5LTA5LTEz
        VDE1OjMzOjM5KzAyOjAwDfqo1wAACvtJREFUWEetlglUU1caxx9FpVqt1apVxKqtbYfa2qOtXVxwaxWt
        OiqKCwqCGpRdURGohrXIoiwCKghCElFEICBJABMQRaAsYQtLhISAgAURFNnfu/eb+xzG6czpInPmnvM/
        38tL8v6/+33fvfdRUOYbAIqQLKi6FAmqBDdoEh+Ax9nr4LHsC3haMBM6CycA7tcGAIrV/31AipEQEtcw
        cGffc0jf0wzJhnWQuqkaRMbFIDHNAvGBBBBxQiHR1Bmu7TKDS5vWQvDGhRC8azbEnZkMuQk6AENa0Fn6
        vwFC3I5kCP2UxlGLaJx6cAhJHDsRf30jurSoHocuqIewxWoIW6aBoOUN4GegAs9lteC8RA7HV94H5+0i
        8LYVQKBHIIRfcB4Iu7iCmjSfUvn6v36i4MruZPBdSOOgxTQOXwsofA8g3k80LTz/YlDs3zGUeKqViT7Q
        hAM2q8F9rQpcfqgHRxKtifavUcH2lSrYaqgGox2P+r38wtMB3mhKSBwBQPA+IXCX0vjsGhqHGAP2NgJ8
        gui4NQydC4fuEjnT26oe7K8u6B28l9TFxIe04aBTzfjUQQ0cNFbBulVKWEa0ZINqgBsQ9gBAu1WSOQIA
        L7MUOPE9jd020zjgAGAvoqOmgHfthsHtR+CJSIpfPO9CL7pYdaKepx2o79cWmlHV9aP8B90oKqYdbzFX
        wxebVAOOvhekJAPNQtEIAJwtUrDVRgY77aSRjy0grg0gG0tAW0xhcLMdPEnLwt2dT9Gz9jbc1daGnj1p
        R90dHWjwRQ8a6u3DNIn0yXOtMGezqm/v6cBoAqCO5L8+AHY4koLNtzPY3oxGnk6ATjkCsrQHtM4CBtbY
        gUqQgqurq6BMXgLyoiJcXVGBnzS3oIHnz1EfycpQ13OGtvJvgSlb6ruXWPlvAI1WCcdpBAAc+xS00wQh
        DodBXDdAx1yAsTgJQ8s50L3wMKQe94GLEVEQHc2DqKirwOfzQSIS4UcqNert7ESDHV0MbUYAdIzqn0/e
        6UMFjdcqmL1+BAD7jt9GmywQMrFmkLMPMFZcGNzjAn1fkvrPsoA4cy7wBKk4XXwPJyeKcXBgKAQGBkFC
        QgK0qDVooJ0AmAS3YMq4vova4sU6F1LfjQDAyDkNreYgtMWeYY4FwKC5B7zY5ALdn9pAp54llHjzcZVC
        gx9WNeCaSiWuKKnA6bfFODoqGrKlMtzT3MYMmYa1DlJ7VO3U1pcAD6glIwAwPC1CX1sj9P0xUstA6DX2
        hK6VLtDz2QmSgSNQ6iPAdcoGrKlT47rqGlxXVYNb1Y04924OFggEoCwsZfrNLrb2vrlf3Uxt9WSds0cE
        sNxdjPRtEbP4ODOwLxC6NnjCcwMu9Cx0hcezrKAiQIA1KjXWPKzHtQoFrqlQ4KY6Da4uU2Ae6Yf0+CSm
        xySs9dlky4YGattLgAxq6etngPnGQ0zPtkND+o5Mz7YA6PjBA7oNPODZop+gebYVlPnzcL2yDtfXKLGi
        rAKXF5eTTKhxZakCX7t2DQRhkcyz7cEtHbq2GuWoHS8B0rSXvz7AwGJ3SZ+uDdPzoQPTuf5naFvlBl3L
        3KFjkSto5thAsW8MVpLU11ZUYXlhKS7Mk+Oq8npckFeEo69GAy/4Ev108/nmX2fZa6rGm3iyJ2aSzsrX
        B3ixkCt5NvUI0znTmmlbdgYefe0MTxafhl8XOEM9Acj3icaK8kpcWliO83NLcG5OCS4prMY5OffB188P
        JLE3h9rW+Tc90rXXlE+z8AQZULfeHcEy7Pr8dHr7RA5qm8ShmxecwOpPj0LzZyfhkf5JqJljCzkeUbio
        oAzn35fjnKwinC0twoW/lGKRSARcLhceZhcOPlru3aiaZqspnWfjRc5k6oFr6OtnoF3fNb15nAUiohs/
        Oorr5tlD3Qf2oPrQESretwXpmSice4+Yy4qxNDMfp0tkWCbLAh8fH0hKuIXbimoH1V9xNbXvWDUUf2zv
        U022YtZdi9JiozbRqN+I/cze13pF2DzPWawebY7UOhZ0w1wHrJxrD1V61qDQtYHCGVaQcioMS8TZ+HZq
        OhaliUEmk8Jdkn7BtQSsqnmIHucpBmrmuzSUv8WpL55qfe/+504WZnNXvEsM3iIaTzRhWOz1OKI3h4H+
        CdEw+2Ra7ShzVDvGnFbq2eGa2Q5QTox/mWYJN5bbQlRQGMTExEBYWNjLWcfHx0NlZSUUFpdDSVEl1mTJ
        +wvnOqizR5vWZYzeqxbrWVa6L923ijyahZgyHCeTOInonWEYneFMUNRDvROpFQSgggAoptvgSj07KNO1
        g/uzrCHayRdCQi+Au5s7uDq7wFnvn3F4aBjOzMyEvKJf4FJiLMhiE/vT3juouam1Q3WD2q6On25efXq1
        2QZi8B7RjGHpkjiTiI0s1NhXZVDMOC4sHmWBikdb0PJp1rhkph0UEYB7c+wgPZCHM9MzsCQ1Dd8Rp2Op
        JAOlJaegiOgICL3rBifSfgQvvwODsZN2N/IoIzWfBdA9VO3zo5UhMZg6bPoBifrDmkPixFezZ0sgf/do
        cp62BcobZUEXTLXGBcT8AZFsth2kBcTgO5IMnJkmeSnWXCrKQFdiQ3Fw9mqILF8L3Fsbsd+qre3Xqd31
        cUTxMyyrfQyPsADTiT4iWkz0LdHfhkvwsklfjfy37ZLuEoC72ub0vSnWOIeY351hB5L3bSDZNxKLb6ch
        kTAV3U4UojgeH8Xz45Ao+TZKlrlivnwJXJGbwunLe+mgT3a3XKZ2qMMm71Xunb/WhBh8RWRAtGwYhG3K
        f3f/vwhyJtjeynjDnE7X2k9njrdE0ul2cIcACEkPxHtfRKlJQiRMSELxgusoIvwSiosVIJnkDsrNkaIY
        yU4cWbILzuU6gQOXM+A65e+tJ8euV387Rf8oef4PROy5zNadXYq/P4TjDgQKtUzbUrTMngq1zF6kvnVo
        MG2aLY7XswK+xwWUePMWunU9nsxegCIvRaCEuBtIKs5AsvQ7KP7mZeSRZAy+BWfAXsiFXSb7+szHrmic
        P0bPkbixB8J8Irb7/3j4jzKcF6llxEugzJoSqf2NCdT+5ltjOU95Mw8zV9wCUXzcDeYGSTsr/tVYJE5J
        Q/k5uSj//gOUI81GVwTnaQs+B9vJgmB9iBOs+ObHjnla77HvZGzq2T74z5r/N4ovtZ5ypVbMvEBti4zT
        Nm+6qWPZmPC2dVPsB3ZPLruff3YtLm6Az+MPCHj8IV5MLMPOvFJeTt4NFbisuBTLIoS9u/bs7DHkn4Z1
        18+Bro350IQFXwQQn8+I2I3nr8dZ7U2UI2UwLXyKWVjCvJMtwvlnWuO+/qnR2cTmSkRkRDXZiPqJenl8
        Xn92VvZARXnFgKJSMSQvlkPmxeQ+lwUWHd9YmtGLYvzg4wAufOtgr/zSYPUm4vzOX7sP/8L7w72Uy4wt
        k6OXngoUbQxsSzYKbN0yf7WVkfF2DtkFKxKTEvulWbLC4uLiIrIT9tYoa1PlpaUROSLZ9fCNru62e45l
        Ljjj2BMqSoHAi6Gw3/rwbZ2xb7LL8M9L8FtC7+8OU8f1jSfeMAk4Kzl2tWX3dxutyff6Xl5eBvJSubSs
        stzvQV7exwQgRFn/8GhGjnRMwyPNpCFAWiEhF98+5Ork7h/kz5jZmDGrNq8WjNEZw5bhj1fA76XH19CB
        cjM4NPGqlb/L4XV72E4eVVdfRykfKhcUl5VsY/9Tp6obp2pUT2OvQ2MiXj6Gc4RDHT7Cmb7DfEeUobGh
        59xP5s4jt9k9/0/HPwCynuSjP6wfNgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>